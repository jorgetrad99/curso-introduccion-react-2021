{"version":3,"sources":["TodoContext/index.jsx","TodoContext/useLocalStorage.jsx","TodoCounter/index.jsx","TodoSearch/index.jsx","TodoList/index.jsx","TodoItem/index.jsx","CreateTodoButton/index.jsx","App/AppUI.jsx","App/index.jsx","index.jsx"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","children","TodoCounter","useContext","className","TodoSearch","Fragment","placeholder","onChange","event","console","log","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","alert","AppUI","map","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6264904.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n  const {\n    item: todos,\n    saveItem: saveTodos,\n    loading,\n    error,\n  } = useLocalStorage('TODOS_V1', []);\n  const [searchValue, setSearchValue] = React.useState('');\n\n  const completedTodos = todos.filter(todo => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter(todo => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const completeTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n    saveTodos(newTodos);\n  };\n\n  const deleteTodo = (text) => {\n    const todoIndex = todos.findIndex(todo => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n    saveTodos(newTodos);\n  };\n  \n  return (\n    <TodoContext.Provider value={{\n      loading,\n      error,\n      totalTodos,\n      completedTodos,\n      searchValue,\n      setSearchValue,\n      searchedTodos,\n      completeTodo,\n      deleteTodo,\n    }}>\n      {props.children}\n    </TodoContext.Provider>\n  );\n}\n\nexport { TodoContext, TodoProvider };","import React from 'react';\n\nfunction useLocalStorage(itemName, initialValue) {\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n  const [item, setItem] = React.useState(initialValue);\n  \n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n        \n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n\n        setItem(parsedItem);\n        setLoading(false);\n      } catch(error) {\n        setError(error);\n      }\n    }, 1000);\n  });\n  \n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch(error) {\n      setError(error);\n    }\n  };\n\n  return {\n    item,\n    saveItem,\n    loading,\n    error,\n  };\n}\n\nexport { useLocalStorage };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoCounter.css';\n\n/* const estilos = {\n    color: 'red',\n    backgroundColor: 'yellow',\n} */\n\nfunction TodoCounter() {\n    const { totalTodos, completedTodos } = React.useContext(TodoContext);\n    \n    return (\n        <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODO's</h2>\n    );\n}\n\nexport { TodoCounter };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoSearch.css';\n\nfunction TodoSearch() {\n  const { searchValue, setSearchValue } = React.useContext(TodoContext);\n\n  const onSearchValueChange = (event) => {\n    console.log(event.target.value);\n    setSearchValue(event.target.value)\n  };\n  \n  return (\n    <React.Fragment>\n      <input\n        className=\"TodoSearch\"\n        placeholder=\"Cebolla\"\n        /* onChange={onSearchValueChange} */\n        value={ searchValue }\n        onChange={ onSearchValueChange }\n      />\n    </React.Fragment>\n  );\n}\n\nexport { TodoSearch };","import React from 'react';\nimport './TodoList.css'\n\nfunction TodoList(props) {\n  return (\n    <section>\n      <ul>\n        {props.children}\n      </ul>\n    </section>\n  );\n}\n\nexport { TodoList };","import React from 'react';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {  \n  return (\n    <li className=\"TodoItem\">\n      <span\n        className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}\n        onClick={props.onComplete}\n      >\n        √\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n        {props.text}\n      </p>\n      <span\n        className=\"Icon Icon-delete\"\n        onClick={props.onDelete}\n      >\n        X\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };","import React from 'react';\nimport './CreateTodoButton.css';\n\nfunction CreateTodoButton(props) {\n  const onClickFunction = (msg) => {\n    alert(msg)\n  }\n\n  return (\n    <button \n      className=\"CreateTodoButton\"\n      onClick={ () => onClickFunction(\"Aquí debería abrirse el nodal\") }\n    >\n      +\n    </button>\n  );\n}\n\nexport { CreateTodoButton };","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoSearch } from '../TodoSearch';\nimport { TodoList } from '../TodoList';\nimport { TodoItem } from '../TodoItem';\nimport { CreateTodoButton } from '../CreateTodoButton';\n\nfunction AppUI() {\n  const { error, \n    loading, \n    searchedTodos, \n    completeTodo, \n    deleteTodo \n  } = React.useContext(TodoContext);\n\n  return (\n    <React.Fragment>\n      <TodoCounter />\n      <TodoSearch />\n      <TodoList>\n        { error && <p>Desespérate, hubo un error...</p> }\n        { loading && <p>Estamos cargando, no desesperes...</p> }\n        { (!loading && !searchedTodos.length) && <p>Crea tu primer TODO!</p> }\n\n        {searchedTodos.map(todo => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeTodo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        ))}\n      </TodoList>\n      <CreateTodoButton />\n    </React.Fragment>\n  );\n}\n\nexport { AppUI };","import React from 'react';\nimport { TodoProvider } from '../TodoContext';\nimport { AppUI } from './AppUI';\n\n\n// const defaultTodos = [\n//   { text: 'Cortar cebolla', completed: true },\n//   { text: 'Tomar el cursso de intro a React', completed: false },\n//   { text: 'Llorar con la llorona', completed: true },\n//   { text: 'LALALALAA', completed: false },\n// ];\n\nfunction App() {\n  \n\n  return (\n    <TodoProvider>\n      <AppUI />\n    </TodoProvider>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/index.jsx';\n/* import './index.css'; */\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}